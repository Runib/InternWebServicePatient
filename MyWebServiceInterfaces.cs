//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8935
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Web.Services.WebServiceBindingAttribute(Name="MyWebService_Binding", Namespace="http://SoftIDTx/Services/")]
public interface IMyWebService_Binding {
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="ClearTest", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="ClearTestResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("outClearTest")]
    bool ClearAllTest();
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="UpdateAllTest", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="UpdateAllTestResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("outUpdateTest")]
    bool UpdateSelectedTests([System.Xml.Serialization.XmlElementAttribute("TestList")] Test[] TestList);
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="CheckPatient", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="CheckPatientResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("outCheckPatient")]
    bool EqualsPatient(Patient Patient);
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="ReadAllPatient", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="ReadAllPatientResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("AllPatientResponse")]
    Patient[] LoadAllPatientData();
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="ReadPatientDataByMrn", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="ReadPatientDataByMrnResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("PatientData")]
    Patient LoadPatientData(string PatientMrn);
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="ReadPatientDataByOrder", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="ReadPatientDataByOrderResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("PatientData")]
    Patient LoadPatientDataByOrder(Order OrderData);
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="CreatePatient", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="CreatePatientResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("outCreatePatient")]
    bool CreatePatientData(Patient Patient);
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="UpdatePatient", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="UpdatePatientResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("outUpdatePatient")]
    bool UpdatePatientData(string MRN, string FirstName, string SecondName, System.DateTime DOB, [System.Xml.Serialization.XmlIgnoreAttribute()] bool DOBSpecified, string Sex, string Email);
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="DeletePatient", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="DeletePatientResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("outDeletePatient")]
    bool DeletePatientData(string MRN);
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="ReadAllOrder", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="ReadAllOrderResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("OrderData")]
    Order[] LoadAllOrderData();
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="ReadOrder", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="ReadOrderResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("OrderData")]
    Order[] LoadOrderData(string PatientMrn);
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="ReadOrderByOrderNumber", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="ReadOrderByOrderNumberResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("OrderData")]
    Order[] LoadOrderDataByOrderNumber(int OrderNumber);
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="CreateOrder", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="CreateOrderResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("outCreateOrder")]
    bool CreateOrderData(Order Order, string PatientMrn);
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="DeleteOrder", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="DeleteOrderResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("outDeleteOrder")]
    bool DeleteOrderData(Order Order);
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="ReadAllTest", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="ReadAllTestResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("Test")]
    Test[] LoadAllTestData();
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="ReadTest", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="ReadTestResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("TestData")]
    Test[] LoadTestData(int OrderNumber);
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="CreateTest", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="CreateTestResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("outCreateTest")]
    bool CreateTestData(Test Test);
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="DeleteTest", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="DeleteTestResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("outDeleteTest")]
    bool DeleteTestData(int TestId);
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="ReadAllTitle", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="ReadAllTitleResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("AllTitle")]
    Title[] LoadAllTitle();
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="GetTitle", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="GetTitleResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("Title")]
    string LoadTitle(int TitleId);
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="GetTitleId", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="GetTitleIdResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("TitleId")]
    int LoadTitleId(string Title);
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute()]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="GetLastIndex", RequestNamespace="http://SoftIDTx/Services/", ResponseElementName="GetLastIndexResponse", ResponseNamespace="http://SoftIDTx/Services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("LastIndex")]
    int NextIdOrder();
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://SoftIDTx/Services/")]
public partial class Test {
    
    private int titleIdField;
    
    private string typeField;
    
    private int testIdField;
    
    private string specimenCodeField;
    
    private int priorityField;
    
    private bool isSelectedField;
    
    private int orderNumberField;
    
    /// <remarks/>
    public int TitleId {
        get {
            return this.titleIdField;
        }
        set {
            this.titleIdField = value;
        }
    }
    
    /// <remarks/>
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    public int TestId {
        get {
            return this.testIdField;
        }
        set {
            this.testIdField = value;
        }
    }
    
    /// <remarks/>
    public string SpecimenCode {
        get {
            return this.specimenCodeField;
        }
        set {
            this.specimenCodeField = value;
        }
    }
    
    /// <remarks/>
    public int Priority {
        get {
            return this.priorityField;
        }
        set {
            this.priorityField = value;
        }
    }
    
    /// <remarks/>
    public bool isSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    public int OrderNumber {
        get {
            return this.orderNumberField;
        }
        set {
            this.orderNumberField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://SoftIDTx/Services/")]
public partial class Title {
    
    private int titleIdField;
    
    private string title1Field;
    
    /// <remarks/>
    public int TitleId {
        get {
            return this.titleIdField;
        }
        set {
            this.titleIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Title")]
    public string Title1 {
        get {
            return this.title1Field;
        }
        set {
            this.title1Field = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://SoftIDTx/Services/")]
public partial class Order {
    
    private int orderNumberField;
    
    private System.DateTime startDateField;
    
    private System.DateTime endDateField;
    
    private string patientMRNField;
    
    /// <remarks/>
    public int OrderNumber {
        get {
            return this.orderNumberField;
        }
        set {
            this.orderNumberField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime StartDate {
        get {
            return this.startDateField;
        }
        set {
            this.startDateField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime EndDate {
        get {
            return this.endDateField;
        }
        set {
            this.endDateField = value;
        }
    }
    
    /// <remarks/>
    public string patientMRN {
        get {
            return this.patientMRNField;
        }
        set {
            this.patientMRNField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://SoftIDTx/Services/")]
public partial class Patient {
    
    private string firstNameField;
    
    private string secondNameField;
    
    private string mRNField;
    
    private System.DateTime dOBField;
    
    private string sexField;
    
    private string emailField;
    
    /// <remarks/>
    public string FirstName {
        get {
            return this.firstNameField;
        }
        set {
            this.firstNameField = value;
        }
    }
    
    /// <remarks/>
    public string SecondName {
        get {
            return this.secondNameField;
        }
        set {
            this.secondNameField = value;
        }
    }
    
    /// <remarks/>
    public string MRN {
        get {
            return this.mRNField;
        }
        set {
            this.mRNField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime DOB {
        get {
            return this.dOBField;
        }
        set {
            this.dOBField = value;
        }
    }
    
    /// <remarks/>
    public string Sex {
        get {
            return this.sexField;
        }
        set {
            this.sexField = value;
        }
    }
    
    /// <remarks/>
    public string Email {
        get {
            return this.emailField;
        }
        set {
            this.emailField = value;
        }
    }
}
